<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edu.mapper.LessonMapper" >
  <resultMap id="BaseResultMap" type="com.edu.pojo.Lesson" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="like" property="like" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, content, uid, filename, price, createtime, like
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_lesson
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_lesson
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edu.pojo.Lesson" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_lesson (title, content, uid, 
      filename, price, createtime, 
      like)
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{filename,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{like,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.pojo.Lesson" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_lesson
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="filename != null" >
        filename,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="like != null" >
        like,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="like != null" >
        #{like,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.pojo.Lesson" >
    update t_lesson
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="like != null" >
        like = #{like,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.pojo.Lesson" >
    update t_lesson
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      filename = #{filename,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      like = #{like,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>